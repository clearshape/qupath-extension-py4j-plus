py4j.title = Py4J

py4j.extension.name = QuPath Py4J extension
py4j.extension.description = Connect QuPath to Python via Py4J

py4j.enable = Enable Py4J
py4j.enable.description = Enable Py4J through the UI to accept connections - this enables QuPath to communicate with Python.\nSee www.py4j.org for more info.

py4j.gateway.text = Create a Py4J Gateway.\n\
This enables Python programs to access QuPath through a local network socket.\n\
Check out py4j.org for more details & security info.

py4j.gateway.port.label = Port
py4j.gateway.port.prompt = Default port %s

py4j.gateway.token.label = Token
py4j.gateway.token.prompt = Authentication token (optional)

py4j.gateway.token.random = Random
py4j.gateway.token.random.description = Generate a UUID to use as an authentication token

py4j.gateway.token.copy = Copy
py4j.gateway.token.copy.description = Copy the authentication token to the system clipboard (to use in Python)

py4j.gateway.start = Start Py4J Gateway
py4j.gateway.stop = Stop Py4J Gateway
py4j.gateway.action.description = Start a Py4J Gateway to communicate between QuPath and Python

py4j.error.invalid_port = Unable to parse port number - must be a valid integer

py4j.notifications.gateway_started = Py4J Gateway started
py4j.notifications.gateway_stopped = Py4J Gateway stopped
py4j.notifications.no_token = No token selected
py4j.notifications.token_copied = Token copied to the clipboard!